#!/bin/bash!/bin/bash
#
# This  script automatically creates a tmux environment for the workspace specified
# in the first argument.
#

function _start_euler() {

  local euler_dir=""

  echo "Starting the EULER development workspace"

  tmux new-session -s euler \; \
   rename-window "EULER" \; send-keys "workon euler; vim" C-m C-l \; \
    split-window -h \; send-keys "workon euler" C-m C-l \; \
    split-window \; send-keys "workon euler" C-m C-l \; \
   new-window -n "EULER DOCS" \; send-keys "workon euler" C-m C-l \; \
    split-window -h \; send-keys "workon euler" C-m C-l \; \
    split-window \; send-keys "workon euler" C-m C-l \; \
   new-window -n misc \; \
   select-window -t "EULER" \; \
  attach
}


function _start_filia() {
  
  local filia_dir=""

  echo "Starting the FILIA development workspace"

  tmux new-session -s filia \; \
   rename-window "FILIA OS" \; send-keys "workon payany; vim" C-m C-l \; \
    split-window -h \; send-keys "workon payany" C-m C-l \; \
    split-window \; send-keys "workon payany" C-m C-l \; \
   new-window -n "FILIA APP" \; send-keys "workon payany; vim" C-m C-l \; \
    split-window -h \; send-keys "workon payany" C-m C-l \; \
    split-window \; send-keys "workon payany" C-m C-l \; \
     new-window -n NOTES \; send-keys "vim $HOME/notes/journal.md" C-m C-l \; \
   new-window -n RPI-SSH \; \
   new-window -n misc \; \
   select-window -t "FILIA OS" \; \
  attach


}

function _start_books {

  local books_dir=""

  echo "Starting the BOOKS catalogue development workspace"

  tmux new-session -s books \; \
   rename-window "BOOKS" \; send-keys "workon books; vim" C-m C-l \; \
    split-window -v \; send-keys "workon books" C-m C-l \; \
   new-window -n "BOOKS MISC" \; send-keys "workon books; vim" C-m C-l \; \
    split-window -v \; send-keys "workon books" C-m C-l \; \
   new-window -n "BOOKS DOCS" \; send-keys "workon books" C-m C-l \; \
    split-window -h \; send-keys "workon books" C-m C-l \; \
   new-window -n misc \; \
   select-window -t "BOOKS" \; \
  attach

}

function _start_arduino() {

  local arduino_dir=""

  echo "Starting the ARDUINO development workspace"

  tmux new-session -s arduino \; \
   rename-window "ARDUINO" \; send-keys "workon arduino; vim" C-m C-l \; \
    split-window -h \; send-keys "workon arduino" C-m C-l \; \
    split-window \; send-keys "workon arduino" C-m C-l \; \
   new-window -n "ARDUINO MISC" \; send-keys "workon arduino; vim" C-m C-l \; \
    split-window -h \; send-keys "workon arduino" C-m C-l \; \
    split-window \; send-keys "workon arduino" C-m C-l \; \
   new-window -n "ARDUINO DOCS" \; send-keys "workon arduino" C-m C-l \; \
    split-window -h \; send-keys "workon arduino" C-m C-l \; \
    split-window \; send-keys "workon arduino" C-m C-l \; \
   new-window -n misc \; \
   select-window -t "ARDUINO" \; \
  attach

}

function start_tmux() {

  local wrk_space=$1
  local FILIA="filia"
  local EULER="euler"
  local ARDUINO="arduino"
  local BOOKS="books"

  [ -n "$TMUX" ] && tmux ls | grep $wrk_space && echo "TMUX session is already running" && return 0

  # Default behaviour
  if [ -z $wrk_space ]; then
    start_tmux $FILIA
    return $?
  fi

  if [ "$wrk_space" = "$EULER" ]; then
    _start_euler
    return 0
  fi

  if [ "$wrk_space" = "$FILIA" ]; then
    _start_filia
    return 0
  fi

  if [ "$wrk_space" = "$ARDUINO" ]; then
    _start_arduino
    return 0
  fi

  if [ "$wrk_space" = "$BOOKS" ]; then
    _start_books
    return 0
  fi

  local tmux_proj_file="$PROJECT_HOME/$wrk_space/.tmux"
  local tmux_start_func="start_${wrk_space}"
  if [ -f "$tmux_proj_file" ]; then
    source $tmux_proj_file
    type $tmux_start_func &>/dev/null && return 0
    echo "No tmux 'start function' is defined for project '$wrk_space'" 
  else
    echo "No tmux session is defined for project '$wrk_space'" 
  fi
      
  return 1

}


